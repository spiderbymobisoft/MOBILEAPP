{"version":3,"sources":["../../src/pages/settings/settings.module.ts","../../src/pages/settings/settings.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACN;AAU1C,IAAa,kBAAkB;IAA/B;IAAiC,CAAC;IAAD,yBAAC;AAAD,CAAC;AAArB,kBAAkB;IAR9B,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,+DAAY;SACb;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,+DAAY,CAAC;SACvC;KACF,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZW;AAC0B;AACQ;AACR;AAOpE,IAAa,YAAY;IAOvB,sBAAmB,OAAsB,EAAS,SAAoB,EAC5D,EAAkB,EAAU,GAAc;QADpD,iBAKC;QALkB,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAC5D,OAAE,GAAF,EAAE,CAAgB;QAAU,QAAG,GAAH,GAAG,CAAW;QANpD,iBAAY,GAAQ;YAClB,EAAE,EAAE,WAAW;YACf,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;SACZ,CAAC;QAGE,GAAG,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,kBAAQ;YACxC,KAAI,CAAC,YAAY,GAAI,QAAQ,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAc,GAAd;IAEA,CAAC;IAED,0CAAmB,GAAnB,UAAoB,CAAC;QACnB,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAClC,CAAC;IACH,CAAC;IAED,qCAAc,GAAd;QACE,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,EAAC;YACxC,eAAe;YACf,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,0CAA0C,EAAE,IAAI,CAAC,CAAC;YAChE,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC;gBACzD,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAED,iCAAU,GAAV,UAAW,EAAE;QACX,EAAE,CAAC,CAAC,kKAAkK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChL,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEH,mBAAC;AAAD,CAAC;AA7CY,YAAY;IALxB,wEAAS,EAAE;IACX,gEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;OACG;KAC7B,CAAC;8LAQsE;QACxD,SAAsC;AAqCrD;SA7CY,YAAY,e","file":"15.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SettingsPage } from './settings';\n\n@NgModule({\n  declarations: [\n    SettingsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SettingsPage),\n  ],\n})\nexport class SettingsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { SharedServices } from '../../app.services/library/shared.services';\nimport { APIConfig } from '../../app.services/apiconfig/api.config';\n\n@IonicPage()\n@Component({\n  selector: 'page-settings',\n  templateUrl: 'settings.html',\n})\nexport class SettingsPage {\n\n  serverConfig: any = {\n    ip: '127.0.0.1',\n    port: 5110,\n    cloud: true\n  }; \n  constructor(public navCtrl: NavController, public navParams: NavParams, \n    private ss: SharedServices, private api: APIConfig) {\n      api.getLocalServerSettings().then(settings=>{\n        this.serverConfig  = settings;\n      });\n  }\n\n  ionViewDidLoad() {\n    \n  }\n\n  useCloudChangeEvent(e) {\n    if (e.checked) {\n      this.serverConfig.cloud = true;\n    } else {\n      this.serverConfig.cloud = false;\n    }\n  }\n\n  updateSettings() {\n    if(this.validateIP(this.serverConfig.ip)){\n      //Save settings\n      this.ss.toast('Server settings saved! Restarting app...', 3000);\n      this.api.updateLocalServerSettings(this.serverConfig).then(()=>{\n        window.location.reload();\n      });\n    }else{\n      this.ss.toast('Invalid IP Address! ' + this.serverConfig.ip, 3000);\n    }\n  }\n\n  validateIP(ip) {\n    if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip)) {\n      return (true);\n    }\n    return (false);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts"],"sourceRoot":""}