{"version":3,"sources":["../../src/pages/streets/streets.module.ts","../../src/pages/streets/streets.ts","../../src/pipes/search.pipe.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { StreetsPage } from './streets';\nimport { SearchPipe } from '../../pipes/search.pipe';\n\n@NgModule({\n  declarations: [\n    StreetsPage,\n    SearchPipe\n  ],\n  imports: [\n    IonicPageModule.forChild(StreetsPage),\n  ],\n})\nexport class StreetsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/streets/streets.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ActionSheetController } from 'ionic-angular';\nimport { RetrieveService } from '../../app.services/http/crud/retrieve.services';\nimport { Store } from '../../app.services/store/data.store';\nimport { SharedServices } from '../../app.services/library/shared.services';\n\n@IonicPage()\n@Component({\n  selector: 'page-streets',\n  templateUrl: 'streets.html',\n})\nexport class StreetsPage {\n\n  public searchText: string = '';\n  public streetRecords: any[] = [];\n  public user: any;\n  public isBlankPost: number = 0;\n  private networkErrorText: string = '';\n  private start: number = 0;\n  private searchSwitch: boolean = false;\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n    private actionSheetCtrl: ActionSheetController,\n    private rs: RetrieveService, private store: Store, private ss: SharedServices) {\n  }\n\n  ionViewDidLoad() {\n    this.dataInit();\n  }\n\n  ionViewWillEnter() {\n  }\n\n  dataInit() {\n    this.user = this.store.GET_USER();\n    setTimeout(() => {\n      this.loadContent();\n    }, 500);\n  }\n\n  loadContent() {\n    this.getStreetRecords().then(res => {\n      if (!res) {\n        this.isBlankPost = 1;\n        setTimeout(() => {\n          this.networkErrorText = '';\n        }, 3100);\n      }\n    });\n  }\n\n\n  pullGetStreetRecords() {\n    return new Promise(resolve => {\n      this.isBlankPost = 0;\n      this.start = 0;\n      this.rs.getStreetRecords(this.start).subscribe(data => {\n        let _data = data;\n        _data = data;\n        if (_data.result.length > 0) {\n          this.streetRecords = _data.result;\n          this.isBlankPost = 1;\n          resolve(true);\n        } else {\n          resolve(false);\n          this.isBlankPost = 1\n        }\n      }, err => {\n        this.networkErrorText = 'Network Error. Check your internet connection and try again';\n        this.ss.toast(this.networkErrorText, 2000);\n        this.streetRecords.length > 0 ? this.isBlankPost = 0 : this.isBlankPost = 1;\n        resolve(false);\n        setTimeout(() => {\n          this.networkErrorText = '';\n        }, 3100);\n      });\n\n\n    }).catch((err) => {\n      this.ss.toast('Unable to perform this operation. Please try again', 3000);\n    });\n  }\n\n  getStreetRecords() {\n    return new Promise(resolve => {\n      this.rs.getStreetRecords(this.start).subscribe(data => {\n        let _data = data;\n        if (_data.result.length > 0) {\n          this.streetRecords = _data.result;\n          this.isBlankPost = 1;\n          resolve(true);\n        } else {\n          this.isBlankPost = 1\n          resolve(false);\n        }\n      }, err => {\n        this.networkErrorText = 'Network Error. Check your internet connection and try again';\n        this.streetRecords ? this.isBlankPost = 0 : this.isBlankPost = 1;\n        resolve(false);\n      });\n    }).catch((err) => {\n      this.streetRecords.length > 0 ? this.isBlankPost = 0 : this.isBlankPost = 1;\n      this.ss.toast('Unable to perform this operation. Please try again', 2000);\n    });\n  }\n\n  getMoreStreetRecords() {\n    return new Promise(resolve => {\n      this.rs.getStreetRecords(this.start).subscribe(data => {\n        let _data = data;\n        if (_data.result.length > 0) {\n          this.streetRecords = [...this.streetRecords, ..._data.result];\n          this.isBlankPost = 1;\n          resolve(true);\n        } else {\n          this.isBlankPost = 1\n          resolve(false);\n        }\n      }, err => {\n        this.networkErrorText = 'Network Error. Check your internet connection and try again';\n        this.streetRecords ? this.isBlankPost = 0 : this.isBlankPost = 1;\n        resolve(false);\n      });\n    }).catch((err) => {\n      this.streetRecords.length > 0 ? this.isBlankPost = 0 : this.isBlankPost = 1;\n      this.ss.toast('Unable to perform this operation. Please try again', 2000);\n    });\n  }\n\n\n  doRefresh(refresher) {\n    if (!this.searchText) {\n      this.pullGetStreetRecords().then((res) => {\n        if (!res) {\n          setTimeout(() => {\n            this.networkErrorText = '';\n          }, 3100);\n        }\n      });\n    }\n    setTimeout(() => {\n      refresher.complete();\n    }, 500);\n  }\n\n  doInfinite(infiniteScroll: any) {\n    if (this.searchSwitch) {\n      infiniteScroll.complete();\n    } else {\n      this.start += 50;\n      this.getMoreStreetRecords().then(() => {\n        infiniteScroll.complete();\n      }).catch(err => {\n        this.ss.toast('No network connection...', 2000);\n        infiniteScroll.complete();\n      });\n    }\n  }\n\n  add() {\n    this.navCtrl.push('NewStreetPage');\n  }\n\n  showThisRecord(streetRecord) {\n    this.navCtrl.push('StreetPage', { data: streetRecord })\n  }\n\n  searchRecords(ev) {\n    this.searchText = ev.target.value;\n  }\n\n  openMenuOption() {\n    if (this.searchText) {\n      let actionSheet = this.actionSheetCtrl.create({\n        title: 'What do you want to do?',\n        buttons: [\n          {\n            text: 'Search Street Name',\n            icon: 'map',\n            handler: () => {\n              this.search(1);\n            }\n          }, {\n            text: 'Search Street GID ID',\n            icon: 'pin',\n            handler: () => {\n              this.search(2);\n            }\n          },\n          {\n            text: 'Cancel',\n            icon: 'arrow-round-back',\n            role: 'cancel',\n            handler: () => { }\n          }\n        ]\n      });\n      actionSheet.present();\n    } else {\n      this.ss.toast('Please provide street name or GID ID.', 3000);\n    }\n\n  }\n\n  search(option: number) {\n    if (option === 1) {\n      this.searchStreetName();\n    } else {\n      this.searchGISID()\n    }\n\n  }\n\n  searchStreetName(){\n    this.ss.presentLoading();\n      this.start = 0;\n      this.streetRecords = [];\n      this.searchSwitch = true;\n      this.rs.searchStreetRecords(this.searchText, this.start).subscribe(data => {\n        this.ss.dismissLoading();\n        this.searchText = '';\n        let _data = data;\n        if (_data.result.length > 0) {\n          this.streetRecords = _data.result;\n          this.isBlankPost = 1;\n        } else {\n          this.isBlankPost = 1;\n        }\n      }, err => {\n        this.ss.dismissLoading();\n        this.networkErrorText = 'Network Error. Check your internet connection and try again';\n        this.streetRecords ? this.isBlankPost = 0 : this.isBlankPost = 1;\n      });\n  }\n\n  searchGISID(){\n    this.ss.presentLoading();\n    this.start = 0;\n    this.streetRecords = [];\n    this.searchSwitch = true;\n    this.rs.getStreetRecordsByGIS(this.searchText).subscribe(data => {\n      this.ss.dismissLoading();\n      this.searchText = '';\n      let _data = data;\n      if (_data.result.length > 0) {\n        this.streetRecords = _data.result;\n        this.isBlankPost = 1;\n      } else {\n        this.isBlankPost = 1;\n      }\n    }, err => {\n      this.ss.dismissLoading();\n      this.networkErrorText = 'Network Error. Check your internet connection and try again';\n      this.streetRecords ? this.isBlankPost = 0 : this.isBlankPost = 1;\n    });\n  }\n\n  clearSearch() {\n    this.searchText = '';\n    this.start = 0;\n    this.searchSwitch = false;\n    this.streetRecords = [];\n    this.isBlankPost = 0;\n    this.loadContent();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/streets/streets.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'SearchPipe'\n})\nexport class SearchPipe implements PipeTransform {\n  transform(value, args?): Array<any> {\n    let searchText = new RegExp(args, 'ig');\n    if (value) {\n      return value.filter(data => {\n        if (data) {\n          return data.street.street_name.search(searchText) !== -1;\n        }\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/search.pipe.ts"],"sourceRoot":""}